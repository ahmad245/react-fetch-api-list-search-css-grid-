{"version":3,"sources":["components/Search/Search.js","components/Images/Image/Image.js","components/Images/ImageList/ImageList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Search","state","inputValue","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onChange","className","onSubmit","this","htmlFor","type","id","Component","Image","span","setSpan","height","imageRef","current","clientHeight","Math","ceil","React","createRef","addEventListener","style","gridRowEnd","ref","src","image","urls","regular","alt","description","ImageList","images","map","KEY","App","onSearchSubmit","term","a","axios","get","params","query","headers","Authorization","response","data","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA+BgBA,E,4MA3BZC,MAAM,CACFC,WAAW,I,EAEfC,cAAc,SAACC,GAEd,EAAKC,SAAS,CAACH,WAAWE,EAAME,OAAOC,S,EAGxCC,aAAa,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,a,uDAG7B,OACI,qBAAKU,UAAU,aAAf,SACI,sBAAMA,UAAU,UAAUC,SAAUC,KAAKN,aAAzC,SACI,sBAAKI,UAAU,QAAf,UACI,uBAAOG,QAAQ,SAAf,0BACA,uBAAOR,MAAOO,KAAKb,MAAMC,WAAYS,SAAUG,KAAKX,cAAea,KAAK,OAAOC,GAAG,sB,GApBrFC,aC2BNC,E,kDA3BX,WAAYT,GAAO,IAAD,8BACd,cAAMA,IAGVT,MAAM,CACFmB,KAAK,GALS,EAWlBC,QAAQ,WACJ,IAAMC,EAAO,EAAKC,SAASC,QAAQC,aAC7BL,EAAMM,KAAKC,KAAKL,EAAS,IAAI,EACnC,EAAKjB,SAAS,CAACe,UAZf,EAAKG,SAASK,IAAMC,YAFN,E,gEAQdf,KAAKS,SAASC,QAAQM,iBAAiB,OAAOhB,KAAKO,W,+BAWnD,OACI,qBAAKU,MAAO,CAACC,WAAW,QAAD,OAAUlB,KAAKb,MAAMmB,OAA5C,SACI,qBAAKa,IAAKnB,KAAKS,SAAUW,IAAKpB,KAAKJ,MAAMyB,MAAMC,KAAKC,QAASC,IAAKxB,KAAKJ,MAAMyB,MAAMI,oB,GAtB/ErB,aCaLsB,G,6KARP,IAAMC,EAAO3B,KAAKJ,MAAM+B,OAAOC,KAAI,SAACP,GAChC,OAAO,cAAC,EAAD,CAAOA,MAAOA,GAAYA,EAAMlB,OAE3C,OAAQ,qBAAKL,UAAU,aAAf,SACH6B,Q,GAPWvB,cCElByB,EAAM,8CA6BGC,E,4MA1Bb3C,MAAM,CACJwC,OAAO,I,EAETI,e,uCAAe,WAAMC,GAAN,eAAAC,EAAA,sEACMC,IAAMC,IAAI,yCAA0C,CACrEC,OAAQ,CACNC,MAAOL,GAETM,QAAS,CACPC,cAAe,aAAeV,KANrB,OACXW,EADW,OAUb,EAAKjD,SAAS,CAACoC,OAAOa,EAASC,KAAKC,UAVvB,2C,6GAcb,OACE,gCACE,cAAC,EAAD,CAAQ7C,SAAUG,KAAK+B,iBACvB,cAAC,EAAD,CAAWJ,OAAQ3B,KAAKb,MAAMwC,gB,GArBpBvB,aCKHuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea3e54b9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Search extends Component{\n\n    state={\n        inputValue:''\n    }\n    onInputChange=(event)=>{\n     \n     this.setState({inputValue:event.target.value});\n      \n    }\n    onFormSubmit=(event)=>{\n      event.preventDefault();\n      this.props.onChange(this.state.inputValue);\n    }\n    render(){\n        return (\n            <div className=\"ui segment\">\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n                    <div className=\"field\">\n                        <label htmlFor=\"search\">Image Search</label>\n                        <input value={this.state.inputValue} onChange={this.onInputChange} type=\"text\" id=\"search\" />\n                    </div>\n    \n                </form>\n            </div>\n        );\n    }\n   \n}\nexport default  Search;","import React, { Component } from 'react'\nclass Image extends Component{\n    constructor(props){\n        super(props);\n        this.imageRef=React.createRef();\n    }\n    state={\n        span:0\n    }\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load',this.setSpan)\n    }\n\n    setSpan=()=>{\n        const height=this.imageRef.current.clientHeight;\n        const span= Math.ceil(height / 10)+1;\n        this.setState({span});\n\n    }\n\n    render(){\n        return (\n            <div style={{gridRowEnd: `span ${this.state.span}`}}>\n                <img ref={this.imageRef} src={this.props.image.urls.regular} alt={this.props.image.description} />\n            </div>\n        )\n    }\n    \n}\nexport default Image;","import React, { Component } from 'react'\nimport Image from '../Image/Image';\nimport './ImageList.css';\nclass ImageList extends Component{\n    \n    render(){\n        const images=this.props.images.map((image)=>{\n            return <Image image={image} key={image.id} />\n        })\n        return (<div className=\"image-list\">\n            {images}\n        </div>);\n    }\n}\nexport default ImageList;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search/Search\";\nimport ImageList from \"./Images/ImageList/ImageList\";\n\nconst KEY = \"ptoRpC52GpH9TEoM70ujLc15jqrXdUXZxjaSxI6jSAg\";\n//const SECRET = \"zv8Cy3TdoLPtykivLSGs3qSyBkzo4XEAaQKWeOKx_sw\";\nclass App extends Component {\n  state={\n    images:[]\n  }\n  onSearchSubmit=async(term)=> {\n  let response= await  axios.get(\"https://api.unsplash.com/search/photos\", {\n      params: {\n        query: term,\n      },\n      headers: {\n        Authorization: \"Client-ID \" + KEY,\n      },\n    });\n    \n    this.setState({images:response.data.results})\n    \n  }\n  render() {\n    return (\n      <div>\n        <Search onChange={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}